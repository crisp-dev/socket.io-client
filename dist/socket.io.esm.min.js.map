{"version":3,"file":"socket.io.esm.min.js","sources":["../node_modules/parseuri/index.js","../build/esm/url.js","../node_modules/engine.io-client/node_modules/engine.io-parser/build/esm/commons.js","../node_modules/engine.io-client/node_modules/engine.io-parser/build/esm/encodePacket.browser.js","../node_modules/@socket.io/base64-arraybuffer/dist/base64-arraybuffer.es5.js","../node_modules/engine.io-client/node_modules/engine.io-parser/build/esm/decodePacket.browser.js","../node_modules/@socket.io/component-emitter/index.js","../node_modules/engine.io-client/build/esm/globalThis.browser.js","../node_modules/engine.io-client/build/esm/util.js","../node_modules/engine.io-client/build/esm/transport.js","../node_modules/engine.io-client/build/esm/contrib/yeast.js","../node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js","../node_modules/engine.io-client/build/esm/transports/websocket.js","../node_modules/engine.io-client/build/esm/contrib/parseqs.js","../node_modules/engine.io-client/build/esm/transports/index.js","../node_modules/engine.io-client/build/esm/contrib/parseuri.js","../node_modules/engine.io-client/build/esm/socket.js","../node_modules/engine.io-client/node_modules/engine.io-parser/build/esm/index.js","../node_modules/engine.io-client/build/esm/index.js","../build/esm/parser.js","../build/esm/on.js","../build/esm/socket.js","../node_modules/backo2/index.js","../build/esm/manager.js","../build/esm/index.js"],"sourcesContent":["/**\n * Parses an URI\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\n\nvar re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\n\nvar parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\n\nmodule.exports = function parseuri(str) {\n    var src = str,\n        b = str.indexOf('['),\n        e = str.indexOf(']');\n\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n\n    var m = re.exec(str || ''),\n        uri = {},\n        i = 14;\n\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n\n    return uri;\n};\n\nfunction pathNames(obj, path) {\n    var regx = /\\/{2,9}/g,\n        names = path.replace(regx, \"/\").split(\"/\");\n\n    if (path.substr(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.substr(path.length - 1, 1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n\n    return names;\n}\n\nfunction queryKey(uri, query) {\n    var data = {};\n\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n\n    return data;\n}\n","import parseuri from \"parseuri\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parseuri(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + content);\n    };\n    return fileReader.readAsDataURL(data);\n};\nexport default encodePacket;\n","/*\n * base64-arraybuffer 1.0.1 <https://github.com/niklasvh/base64-arraybuffer>\n * Copyright (c) 2022 Niklas von Hertzen <https://hertzen.com>\n * Released under MIT License\n */\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nvar lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (var i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nvar encode = function (arraybuffer) {\n    var bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nvar decode = function (base64) {\n    var bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    var arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n\nexport { decode, encode };\n//# sourceMappingURL=base64-arraybuffer.es5.js.map\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"@socket.io/base64-arraybuffer\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            return data instanceof ArrayBuffer ? new Blob([data]) : data;\n        case \"arraybuffer\":\n        default:\n            return data; // assuming the data is already an ArrayBuffer\n    }\n};\nexport default decodePacket;\n","\n/**\n * Expose `Emitter`.\n */\n\nexports.Emitter = Emitter;\n\n/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nfunction Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export default (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","import globalThis from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nclass TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} options.\n     * @api private\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.readyState = \"\";\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @api protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     *\n     * @api public\n     */\n    open() {\n        if (\"closed\" === this.readyState || \"\" === this.readyState) {\n            this.readyState = \"opening\";\n            this.doOpen();\n        }\n        return this;\n    }\n    /**\n     * Closes the transport.\n     *\n     * @api public\n     */\n    close() {\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     * @api public\n     */\n    send(packets) {\n        if (\"open\" === this.readyState) {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @api protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @api protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @api protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @api protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n}\n","// imported from https://github.com/unshiftio/yeast\n'use strict';\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nexport function encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nexport function decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nexport function yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n","import globalThis from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return cb => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","import { Transport } from \"../transport.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { pick } from \"../util.js\";\nimport { defaultBinaryType, nextTick, usingBrowserWebSocket, WebSocket } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @api {Object} connection options\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Transport name.\n     *\n     * @api public\n     */\n    get name() {\n        return \"websocket\";\n    }\n    /**\n     * Opens socket.\n     *\n     * @api private\n     */\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @api private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = closeEvent => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent\n        });\n        this.ws.onmessage = ev => this.onData(ev.data);\n        this.ws.onerror = e => this.onError(\"websocket error\", e);\n    }\n    /**\n     * Writes data to socket.\n     *\n     * @param {Array} array of packets.\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, data => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \n                        // @ts-ignore\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    /**\n     * Closes socket.\n     *\n     * @api private\n     */\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        let port = \"\";\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"wss\" === schema && Number(this.opts.port) !== 443) ||\n                (\"ws\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @api public\n     */\n    check() {\n        return (!!WebSocket &&\n            !(\"__initialize\" in WebSocket && this.name === WS.prototype.name));\n    }\n}\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","import { WS } from \"./websocket.js\";\nexport const transports = {\n    websocket: WS\n};\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses an URI\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.substr(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.substr(path.length - 1, 1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri or options\n     * @param {Object} opts - options\n     * @api public\n     */\n    constructor(uri, opts = {}) {\n        super();\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parse(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\"websocket\"];\n        this.readyState = \"\";\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024\n            },\n            transportOptions: {},\n            closeOnBeforeunload: true\n        }, opts);\n        this.opts.path = this.opts.path.replace(/\\/$/, \"\") + \"/\";\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                addEventListener(\"beforeunload\", () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                }, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\", {\n                        description: \"network connection lost\"\n                    });\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} transport name\n     * @return {Transport}\n     * @api private\n     */\n    createTransport(name) {\n        const query = clone(this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts.transportOptions[name], this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port\n        });\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @api private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @api private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", reason => this.onClose(\"transport close\", reason));\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} transport name\n     * @api private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", msg => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = err => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        transport.open();\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @api private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState &&\n            this.opts.upgrade &&\n            this.transport.pause) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @api private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.resetPingTimeout();\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @api private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @api private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @api private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @api private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this.maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} message.\n     * @param {Function} callback function.\n     * @param {Object} options.\n     * @return {Socket} for chaining.\n     * @api public\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @api private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     *\n     * @api public\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @api private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @api private\n     */\n    onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} server upgrades\n     * @api private\n     *\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\nfunction clone(obj) {\n    const o = {};\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            o[i] = obj[i];\n        }\n    }\n    return o;\n}\n","import encodePacket from \"./encodePacket.js\";\nimport decodePacket from \"./decodePacket.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload };\n","import { Socket } from \"./socket.js\";\nexport { Socket };\nexport const protocol = Socket.protocol;\nexport { Transport } from \"./transport.js\";\nexport { transports } from \"./transports/index.js\";\nexport { installTimerFunctions } from \"./util.js\";\nexport { parse } from \"./contrib/parseuri\";\n","import { Emitter } from \"@socket.io/component-emitter\";\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data);\n        }\n        return str;\n    }\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    constructor() {\n        super();\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            packet = this.decodeString(obj);\n            if (packet.type === PacketType.BINARY_EVENT ||\n                packet.type === PacketType.BINARY_ACK) {\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return typeof payload === \"object\";\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || typeof payload === \"object\";\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return Array.isArray(payload) && payload.length > 0;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n    }\n}\nfunction tryParse(str) {\n    try {\n        return JSON.parse(str);\n    }\n    catch (e) {\n        return false;\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"./parser.js\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     *\n     * @public\n     */\n    constructor(io, nsp, opts) {\n        super();\n        this.connected = false;\n        this.disconnected = true;\n        this.receiveBuffer = [];\n        this.sendBuffer = [];\n        this.ids = 0;\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @public\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for connect()\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * @return self\n     * @public\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @return self\n     * @public\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n        }\n        else if (this.connected) {\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        const timeout = this.flags.timeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        this.acks[id] = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, [null, ...args]);\n        };\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this.packet({ type: PacketType.CONNECT, data });\n            });\n        }\n        else {\n            this.packet({ type: PacketType.CONNECT, data: this.auth });\n        }\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @private\n     */\n    onclose(reason) {\n        this.connected = false;\n        this.disconnected = true;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason);\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    const id = packet.data.sid;\n                    this.onconnect(id);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.BINARY_EVENT:\n                //this.onevent(packet);\n                break;\n            case PacketType.ACK:\n                this.onack(packet);\n                break;\n            case PacketType.BINARY_ACK:\n                //this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowlegement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (\"function\" === typeof ack) {\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id) {\n        this.id = id;\n        this.connected = true;\n        this.disconnected = false;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => this.packet(packet));\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually.\n     *\n     * @return self\n     * @public\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for disconnect()\n     *\n     * @return self\n     * @public\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     * @public\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @returns self\n     * @public\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * ```\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     * ```\n     *\n     * @returns self\n     * @public\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @param listener\n     * @public\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @param listener\n     * @public\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @param listener\n     * @public\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     *\n     * @public\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n}\n","\n/**\n * Expose `Backoff`.\n */\n\nmodule.exports = Backoff;\n\n/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction Backoff(opts) {\n  opts = opts || {};\n  this.ms = opts.min || 100;\n  this.max = opts.max || 10000;\n  this.factor = opts.factor || 2;\n  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n  this.attempts = 0;\n}\n\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\n\nBackoff.prototype.duration = function(){\n  var ms = this.ms * Math.pow(this.factor, this.attempts++);\n  if (this.jitter) {\n    var rand =  Math.random();\n    var deviation = Math.floor(rand * this.jitter * ms);\n    ms = (Math.floor(rand * 10) & 1) == 0  ? ms - deviation : ms + deviation;\n  }\n  return Math.min(ms, this.max) | 0;\n};\n\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\n\nBackoff.prototype.reset = function(){\n  this.attempts = 0;\n};\n\n/**\n * Set the minimum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMin = function(min){\n  this.ms = min;\n};\n\n/**\n * Set the maximum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMax = function(max){\n  this.max = max;\n};\n\n/**\n * Set the jitter\n *\n * @api public\n */\n\nBackoff.prototype.setJitter = function(jitter){\n  this.jitter = jitter;\n};\n\n","// @ts-ignore\nimport { Socket as Engine, installTimerFunctions, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"./parser.js\";\nimport { on } from \"./on.js\";\nimport Backoff from \"backo2\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        // emit `error`\n        const errorSub = on(socket, \"error\", (err) => {\n            self.cleanup();\n            self._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                self.maybeReconnectOnOpen();\n            }\n        });\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            if (timeout === 0) {\n                openSubDestroy(); // prevents a race condition with the 'open' event\n            }\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                socket.close();\n                // @ts-ignore\n                socket.emit(\"error\", new Error(\"timeout\"));\n            }, timeout);\n            // @ts-ignore\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        this.decoder.add(data);\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        this.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason) {\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            // @ts-ignore\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    // @ts-ignore\n    if (parsed.query && !opts.query) {\n        // @ts-ignore\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"./parser.js\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n"],"names":["re","parts","url","uri","path","loc","obj","location","protocol","host","charAt","test","str","src","b","indexOf","e","substring","replace","length","query","data","m","exec","i","source","authority","ipv6uri","pathNames","regx","names","split","substr","splice","queryKey","$0","$1","$2","parseuri","port","id","href","PACKET_TYPES","Object","create","PACKET_TYPES_REVERSE","keys","forEach","key","ERROR_PACKET","type","withNativeBlob","Blob","prototype","toString","call","withNativeArrayBuffer","ArrayBuffer","encodePacket","supportsBinary","callback","encodeBlobAsBase64","isView","buffer","fileReader","FileReader","onload","content","result","readAsDataURL","chars","lookup","Uint8Array","charCodeAt","decodeBase64Packet","binaryType","decoded","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","len","p","arraybuffer","bytes","decode","mapBinary","Emitter","mixin","on","addEventListener","event","fn","this","_callbacks","push","once","off","apply","arguments","removeListener","removeAllListeners","removeEventListener","cb","callbacks","emit","args","Array","slice","emitReserved","listeners","hasListeners","self","window","Function","NATIVE_SET_TIMEOUT","setTimeout","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","opts","useNativeTimers","setTimeoutFn","bind","globalThis","clearTimeoutFn","TransportError","Error","constructor","reason","description","context","super","Transport","writable","readyState","socket","onError","open","doOpen","close","doClose","onClose","send","packets","write","onOpen","onData","packet","encodedPacket","decodePacket","onPacket","details","alphabet","map","prev","seed","encode","num","encoded","Math","floor","nextTick","Promise","resolve","then","WebSocket","MozWebSocket","isReactNative","navigator","product","toLowerCase","WS","forceBase64","name","check","protocols","attr","reduce","acc","k","hasOwnProperty","pick","extraHeaders","headers","ws","err","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","ev","onerror","lastPacket","schema","secure","Number","timestampRequests","timestampParam","now","Date","yeast","b64","encodedQuery","encodeURIComponent","hostname","transports","websocket","parse","Socket","writeBuffer","prevBufferLen","assign","agent","withCredentials","upgrade","rememberUpgrade","rejectUnauthorized","perMessageDeflate","threshold","transportOptions","closeOnBeforeunload","qs","qry","pairs","l","pair","decodeURIComponent","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","transport","offlineEventListener","createTransport","o","clone","EIO","sid","priorWebsocketSuccess","shift","setTransport","onDrain","probe","failed","onTransportOpen","msg","upgrading","pause","cleanup","flush","freezeTransport","error","onTransportClose","onupgrade","to","onHandshake","JSON","resetPingTimeout","sendPacket","code","filterUpgrades","maxPayload","getWritablePackets","payloadSize","c","utf8Length","ceil","byteLength","size","options","undefined","compress","cleanupAndClose","waitForUpgrade","filteredUpgrades","j","PacketType","Decoder","add","decodeString","BINARY_EVENT","BINARY_ACK","attachments","start","buf","nsp","next","payload","tryParse","isPayloadValid","static","CONNECT","DISCONNECT","CONNECT_ERROR","EVENT","isArray","ACK","destroy","encodeAsString","stringify","RESERVED_EVENTS","freeze","connect","connect_error","disconnect","disconnecting","newListener","io","connected","disconnected","receiveBuffer","sendBuffer","ids","acks","flags","auth","_autoConnect","subEvents","subs","onpacket","active","_readyState","unshift","ack","pop","_registerAckCallback","isTransportWritable","engine","volatile","timeout","timer","_packet","onconnect","onevent","onack","ondisconnect","message","emitEvent","_anyListeners","listener","sent","emitBuffered","subDestroy","onAny","prependAny","offAny","listenersAny","backo2","Backoff","ms","min","max","factor","jitter","attempts","duration","pow","rand","random","deviation","reset","setMin","setMax","setJitter","Manager","_a","nsps","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","Encoder","decoder","autoConnect","v","_reconnection","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","maybeReconnectOnOpen","_reconnecting","reconnect","Engine","skipReconnect","openSubDestroy","errorSub","onping","ondata","ondecoded","_destroy","_close","encodedPackets","delay","onreconnect","attempt","cache","parsed","sameNamespace","forceNew","multiplex"],"mappings":";;;;;AAOA,IAAIA,EAAK,0OAELC,EAAQ,CACR,SAAU,WAAY,YAAa,WAAY,OAAQ,WAAY,OAAQ,OAAQ,WAAY,OAAQ,YAAa,OAAQ,QAAS,UCAlI,SAASC,EAAIC,EAAKC,EAAO,GAAIC,GAChC,IAAIC,EAAMH,EAEVE,EAAMA,GAA4B,oBAAbE,UAA4BA,SAC7C,MAAQJ,IACRA,EAAME,EAAIG,SAAW,KAAOH,EAAII,MAEjB,iBAARN,IACH,MAAQA,EAAIO,OAAO,KAEfP,EADA,MAAQA,EAAIO,OAAO,GACbL,EAAIG,SAAWL,EAGfE,EAAII,KAAON,GAGpB,sBAAsBQ,KAAKR,KAExBA,OADA,IAAuBE,EACjBA,EAAIG,SAAW,KAAOL,EAGtB,WAAaA,GAI3BG,EDtBS,SAAkBM,GAC/B,IAAIC,EAAMD,EACNE,EAAIF,EAAIG,QAAQ,KAChBC,EAAIJ,EAAIG,QAAQ,MAEV,GAAND,IAAiB,GAANE,IACXJ,EAAMA,EAAIK,UAAU,EAAGH,GAAKF,EAAIK,UAAUH,EAAGE,GAAGE,QAAQ,KAAM,KAAON,EAAIK,UAAUD,EAAGJ,EAAIO,SAO9F,IAJA,IAmCmBC,EACfC,EApCAC,EAAItB,EAAGuB,KAAKX,GAAO,IACnBT,EAAM,GACNqB,EAAI,GAEDA,KACHrB,EAAIF,EAAMuB,IAAMF,EAAEE,IAAM,GAa5B,OAVU,GAANV,IAAiB,GAANE,IACXb,EAAIsB,OAASZ,EACbV,EAAIM,KAAON,EAAIM,KAAKQ,UAAU,EAAGd,EAAIM,KAAKU,OAAS,GAAGD,QAAQ,KAAM,KACpEf,EAAIuB,UAAYvB,EAAIuB,UAAUR,QAAQ,IAAK,IAAIA,QAAQ,IAAK,IAAIA,QAAQ,KAAM,KAC9Ef,EAAIwB,SAAU,GAGlBxB,EAAIyB,UAMR,SAAmBtB,EAAKF,GACpB,IAAIyB,EAAO,WACPC,EAAQ1B,EAAKc,QAAQW,EAAM,KAAKE,MAAM,KAS1C,MAPyB,KAArB3B,EAAK4B,OAAO,EAAG,IAA6B,IAAhB5B,EAAKe,QACjCW,EAAMG,OAAO,EAAG,GAEmB,KAAnC7B,EAAK4B,OAAO5B,EAAKe,OAAS,EAAG,IAC7BW,EAAMG,OAAOH,EAAMX,OAAS,EAAG,GAG5BW,EAjBSF,CAAUzB,EAAKA,EAAU,MACzCA,EAAI+B,UAmBed,EAnBUjB,EAAW,MAoBpCkB,EAAO,GAEXD,EAAMF,QAAQ,6BAA6B,SAAUiB,EAAIC,EAAIC,GACrDD,IACAf,EAAKe,GAAMC,MAIZhB,GA1BAlB,ECLGmC,CAASnC,IAGdG,EAAIiC,OACD,cAAc5B,KAAKL,EAAIE,UACvBF,EAAIiC,KAAO,KAEN,eAAe5B,KAAKL,EAAIE,YAC7BF,EAAIiC,KAAO,QAGnBjC,EAAIF,KAAOE,EAAIF,MAAQ,IACvB,MACMK,GADkC,IAA3BH,EAAIG,KAAKM,QAAQ,KACV,IAAMT,EAAIG,KAAO,IAAMH,EAAIG,KAS/C,OAPAH,EAAIkC,GAAKlC,EAAIE,SAAW,MAAQC,EAAO,IAAMH,EAAIiC,KAAOnC,EAExDE,EAAImC,KACAnC,EAAIE,SACA,MACAC,GACCJ,GAAOA,EAAIkC,OAASjC,EAAIiC,KAAO,GAAK,IAAMjC,EAAIiC,MAChDjC,ECzDX,MAAMoC,EAAeC,OAAOC,OAAO,MACnCF,EAAmB,KAAI,IACvBA,EAAoB,MAAI,IACxBA,EAAmB,KAAI,IACvBA,EAAmB,KAAI,IACvBA,EAAsB,QAAI,IAC1BA,EAAsB,QAAI,IAC1BA,EAAmB,KAAI,IACvB,MAAMG,EAAuBF,OAAOC,OAAO,MAC3CD,OAAOG,KAAKJ,GAAcK,SAAQC,IAC9BH,EAAqBH,EAAaM,IAAQA,KAE9C,MAAMC,EAAe,CAAEC,KAAM,QAAS7B,KAAM,gBCXtC8B,EAAiC,mBAATC,MACT,oBAATA,MACqC,6BAAzCT,OAAOU,UAAUC,SAASC,KAAKH,MACjCI,EAA+C,mBAAhBC,YAO/BC,EAAe,EAAGR,KAAAA,EAAM7B,KAAAA,GAAQsC,EAAgBC,KAClD,OAAIT,GAAkB9B,aAAgB+B,KAC9BO,EACOC,EAASvC,GAGTwC,EAAmBxC,EAAMuC,GAG/BJ,IACJnC,aAAgBoC,cAfVnD,EAegCe,EAdN,mBAAvBoC,YAAYK,OACpBL,YAAYK,OAAOxD,GACnBA,GAAOA,EAAIyD,kBAAkBN,cAa3BE,EACOC,EAASvC,GAGTwC,EAAmB,IAAIT,KAAK,CAAC/B,IAAQuC,GAI7CA,EAASlB,EAAaQ,IAAS7B,GAAQ,KAxBnCf,IAAAA,GA0BTuD,EAAqB,CAACxC,EAAMuC,KAC9B,MAAMI,EAAa,IAAIC,WAKvB,OAJAD,EAAWE,OAAS,WAChB,MAAMC,EAAUH,EAAWI,OAAOrC,MAAM,KAAK,GAC7C6B,EAAS,IAAMO,IAEZH,EAAWK,cAAchD,IC9BpC,IAHA,IAAIiD,EAAQ,mEAERC,EAA+B,oBAAfC,WAA6B,GAAK,IAAIA,WAAW,KAC5DhD,EAAI,EAAGA,EAAI8C,EAAMnD,OAAQK,IAC9B+C,EAAOD,EAAMG,WAAWjD,IAAMA,ECPlC,MAAMgC,EAA+C,mBAAhBC,YA4B/BiB,EAAqB,CAACrD,EAAMsD,KAC9B,GAAInB,EAAuB,CACvB,MAAMoB,EDLD,SAAUC,GACnB,IAA8DrD,EAAUsD,EAAUC,EAAUC,EAAUC,EAAlGC,EAA+B,IAAhBL,EAAO1D,OAAegE,EAAMN,EAAO1D,OAAWiE,EAAI,EACnC,MAA9BP,EAAOA,EAAO1D,OAAS,KACvB+D,IACkC,MAA9BL,EAAOA,EAAO1D,OAAS,IACvB+D,KAGR,IAAIG,EAAc,IAAI5B,YAAYyB,GAAeI,EAAQ,IAAId,WAAWa,GACxE,IAAK7D,EAAI,EAAGA,EAAI2D,EAAK3D,GAAK,EACtBsD,EAAWP,EAAOM,EAAOJ,WAAWjD,IACpCuD,EAAWR,EAAOM,EAAOJ,WAAWjD,EAAI,IACxCwD,EAAWT,EAAOM,EAAOJ,WAAWjD,EAAI,IACxCyD,EAAWV,EAAOM,EAAOJ,WAAWjD,EAAI,IACxC8D,EAAMF,KAAQN,GAAY,EAAMC,GAAY,EAC5CO,EAAMF,MAAoB,GAAXL,IAAkB,EAAMC,GAAY,EACnDM,EAAMF,MAAoB,EAAXJ,IAAiB,EAAiB,GAAXC,EAE1C,OAAOI,ECbaE,CAAOlE,GACvB,OAAOmE,EAAUZ,EAASD,GAG1B,MAAO,CAAEE,QAAQ,EAAMxD,KAAAA,IAGzBmE,EAAY,CAACnE,EAAMsD,IAEZ,SADDA,GAEOtD,aAAgBoC,YAAc,IAAIL,KAAK,CAAC/B,IAGxCA,ECxCnB,MAAkBoE,EAQlB,SAASA,EAAQnF,GACf,GAAIA,EAAK,OAWX,SAAeA,GACb,IAAK,IAAI0C,KAAOyC,EAAQpC,UACtB/C,EAAI0C,GAAOyC,EAAQpC,UAAUL,GAE/B,OAAO1C,EAfSoF,CAAMpF,GA2BxBmF,EAAQpC,UAAUsC,GAClBF,EAAQpC,UAAUuC,iBAAmB,SAASC,EAAOC,GAInD,OAHAC,KAAKC,WAAaD,KAAKC,YAAc,IACpCD,KAAKC,WAAW,IAAMH,GAASE,KAAKC,WAAW,IAAMH,IAAU,IAC7DI,KAAKH,GACDC,MAaTN,EAAQpC,UAAU6C,KAAO,SAASL,EAAOC,GACvC,SAASH,IACPI,KAAKI,IAAIN,EAAOF,GAChBG,EAAGM,MAAML,KAAMM,WAKjB,OAFAV,EAAGG,GAAKA,EACRC,KAAKJ,GAAGE,EAAOF,GACRI,MAaTN,EAAQpC,UAAU8C,IAClBV,EAAQpC,UAAUiD,eAClBb,EAAQpC,UAAUkD,mBAClBd,EAAQpC,UAAUmD,oBAAsB,SAASX,EAAOC,GAItD,GAHAC,KAAKC,WAAaD,KAAKC,YAAc,GAGjC,GAAKK,UAAUlF,OAEjB,OADA4E,KAAKC,WAAa,GACXD,KAIT,IAUIU,EAVAC,EAAYX,KAAKC,WAAW,IAAMH,GACtC,IAAKa,EAAW,OAAOX,KAGvB,GAAI,GAAKM,UAAUlF,OAEjB,cADO4E,KAAKC,WAAW,IAAMH,GACtBE,KAKT,IAAK,IAAIvE,EAAI,EAAGA,EAAIkF,EAAUvF,OAAQK,IAEpC,IADAiF,EAAKC,EAAUlF,MACJsE,GAAMW,EAAGX,KAAOA,EAAI,CAC7BY,EAAUzE,OAAOT,EAAG,GACpB,MAUJ,OAJyB,IAArBkF,EAAUvF,eACL4E,KAAKC,WAAW,IAAMH,GAGxBE,MAWTN,EAAQpC,UAAUsD,KAAO,SAASd,GAChCE,KAAKC,WAAaD,KAAKC,YAAc,GAKrC,IAHA,IAAIY,EAAO,IAAIC,MAAMR,UAAUlF,OAAS,GACpCuF,EAAYX,KAAKC,WAAW,IAAMH,GAE7BrE,EAAI,EAAGA,EAAI6E,UAAUlF,OAAQK,IACpCoF,EAAKpF,EAAI,GAAK6E,UAAU7E,GAG1B,GAAIkF,EAEG,CAAIlF,EAAI,EAAb,IAAK,IAAW2D,GADhBuB,EAAYA,EAAUI,MAAM,IACI3F,OAAQK,EAAI2D,IAAO3D,EACjDkF,EAAUlF,GAAG4E,MAAML,KAAMa,GAI7B,OAAOb,MAITN,EAAQpC,UAAU0D,aAAetB,EAAQpC,UAAUsD,KAUnDlB,EAAQpC,UAAU2D,UAAY,SAASnB,GAErC,OADAE,KAAKC,WAAaD,KAAKC,YAAc,GAC9BD,KAAKC,WAAW,IAAMH,IAAU,IAWzCJ,EAAQpC,UAAU4D,aAAe,SAASpB,GACxC,QAAUE,KAAKiB,UAAUnB,GAAO1E,QC9KlC,MACwB,oBAAT+F,KACAA,KAEgB,oBAAXC,OACLA,OAGAC,SAAS,cAATA,GCEf,MAAMC,EAAqBC,WACrBC,EAAuBC,aACtB,SAASC,EAAsBnH,EAAKoH,GACnCA,EAAKC,iBACLrH,EAAIsH,aAAeP,EAAmBQ,KAAKC,GAC3CxH,EAAIyH,eAAiBR,EAAqBM,KAAKC,KAG/CxH,EAAIsH,aAAeN,WAAWO,KAAKC,GACnCxH,EAAIyH,eAAiBP,aAAaK,KAAKC,IChB/C,MAAME,UAAuBC,MACzBC,YAAYC,EAAQC,EAAaC,GAC7BC,MAAMH,GACNpC,KAAKqC,YAAcA,EACnBrC,KAAKsC,QAAUA,EACftC,KAAK7C,KAAO,kBAGb,MAAMqF,UAAkB9C,EAO3ByC,YAAYR,GACRY,QACAvC,KAAKyC,UAAW,EAChBf,EAAsB1B,KAAM2B,GAC5B3B,KAAK2B,KAAOA,EACZ3B,KAAK3E,MAAQsG,EAAKtG,MAClB2E,KAAK0C,WAAa,GAClB1C,KAAK2C,OAAShB,EAAKgB,OAWvBC,QAAQR,EAAQC,EAAaC,GAEzB,OADAC,MAAMvB,aAAa,QAAS,IAAIiB,EAAeG,EAAQC,EAAaC,IAC7DtC,KAOX6C,OAKI,MAJI,WAAa7C,KAAK0C,YAAc,KAAO1C,KAAK0C,aAC5C1C,KAAK0C,WAAa,UAClB1C,KAAK8C,UAEF9C,KAOX+C,QAKI,MAJI,YAAc/C,KAAK0C,YAAc,SAAW1C,KAAK0C,aACjD1C,KAAKgD,UACLhD,KAAKiD,WAEFjD,KAQXkD,KAAKC,GACG,SAAWnD,KAAK0C,YAChB1C,KAAKoD,MAAMD,GAWnBE,SACIrD,KAAK0C,WAAa,OAClB1C,KAAKyC,UAAW,EAChBF,MAAMvB,aAAa,QAQvBsC,OAAOhI,GACH,MAAMiI,EJ5FO,EAACC,EAAe5E,KACjC,GAA6B,iBAAlB4E,EACP,MAAO,CACHrG,KAAM,UACN7B,KAAMmE,EAAU+D,EAAe5E,IAGvC,MAAMzB,EAAOqG,EAAc7I,OAAO,GAClC,MAAa,MAATwC,EACO,CACHA,KAAM,UACN7B,KAAMqD,EAAmB6E,EAActI,UAAU,GAAI0D,IAG1C9B,EAAqBK,GAIjCqG,EAAcpI,OAAS,EACxB,CACE+B,KAAML,EAAqBK,GAC3B7B,KAAMkI,EAActI,UAAU,IAEhC,CACEiC,KAAML,EAAqBK,IARxBD,GI4EQuG,CAAanI,EAAM0E,KAAK2C,OAAO/D,YAC9CoB,KAAK0D,SAASH,GAOlBG,SAASH,GACLhB,MAAMvB,aAAa,SAAUuC,GAOjCN,QAAQU,GACJ3D,KAAK0C,WAAa,SAClBH,MAAMvB,aAAa,QAAS2C,IC/GpC,MAAMC,EAAW,mEAAmE5H,MAAM,IAAkB6H,EAAM,GAClH,IAAqBC,EAAjBC,EAAO,EAAGtI,EAAI,EAQX,SAASuI,EAAOC,GACnB,IAAIC,EAAU,GACd,GACIA,EAAUN,EAASK,EAZ6E,IAY7DC,EACnCD,EAAME,KAAKC,MAAMH,EAb+E,UAc3FA,EAAM,GACf,OAAOC,EA+BX,KAAOzI,EA9CiG,GA8CrFA,IACfoI,EAAID,EAASnI,IAAMA,EChDhB,MAAM4I,EACqC,mBAAZC,SAAqD,mBAApBA,QAAQC,QAEhE7D,GAAM4D,QAAQC,UAAUC,KAAK9D,GAG7B,CAACA,EAAImB,IAAiBA,EAAanB,EAAI,GAGzC+D,EAAY1C,EAAW0C,WAAa1C,EAAW2C,aCHtDC,EAAqC,oBAAdC,WACI,iBAAtBA,UAAUC,SACmB,gBAApCD,UAAUC,QAAQC,cACf,MAAMC,UAAWvC,EAOpBL,YAAYR,GACRY,MAAMZ,GACN3B,KAAKpC,gBAAkB+D,EAAKqD,YAO5BC,WACA,MAAO,YAOXnC,SACI,IAAK9C,KAAKkF,QAEN,OAEJ,MAAM9K,EAAM4F,KAAK5F,MACX+K,EAAYnF,KAAK2B,KAAKwD,UAEtBxD,EAAOgD,EACP,GJ1CP,SAAcpK,KAAQ6K,GACzB,OAAOA,EAAKC,QAAO,CAACC,EAAKC,KACjBhL,EAAIiL,eAAeD,KACnBD,EAAIC,GAAKhL,EAAIgL,IAEVD,IACR,IIqCOG,CAAKzF,KAAK2B,KAAM,QAAS,oBAAqB,MAAO,MAAO,aAAc,OAAQ,KAAM,UAAW,qBAAsB,eAAgB,kBAAmB,SAAU,aAAc,SAAU,uBAChM3B,KAAK2B,KAAK+D,eACV/D,EAAKgE,QAAU3F,KAAK2B,KAAK+D,cAE7B,IACI1F,KAAK4F,GACyBjB,EAIpB,IAAIF,EAAUrK,EAAK+K,EAAWxD,GAH9BwD,EACI,IAAIV,EAAUrK,EAAK+K,GACnB,IAAIV,EAAUrK,GAGhC,MAAOyL,GACH,OAAO7F,KAAKgB,aAAa,QAAS6E,GAEtC7F,KAAK4F,GAAGhH,WAAaoB,KAAK2C,OAAO/D,YD/CR,cCgDzBoB,KAAK8F,oBAOTA,oBACI9F,KAAK4F,GAAGG,OAAS,KACT/F,KAAK2B,KAAKqE,WACVhG,KAAK4F,GAAGK,QAAQC,QAEpBlG,KAAKqD,UAETrD,KAAK4F,GAAGO,QAAUC,GAAcpG,KAAKiD,QAAQ,CACzCZ,YAAa,8BACbC,QAAS8D,IAEbpG,KAAK4F,GAAGS,UAAYC,GAAMtG,KAAKsD,OAAOgD,EAAGhL,MACzC0E,KAAK4F,GAAGW,QAAUtL,GAAK+E,KAAK4C,QAAQ,kBAAmB3H,GAQ3DmI,MAAMD,GACFnD,KAAKyC,UAAW,EAGhB,IAAK,IAAIhH,EAAI,EAAGA,EAAI0H,EAAQ/H,OAAQK,IAAK,CACrC,MAAM8H,EAASJ,EAAQ1H,GACjB+K,EAAa/K,IAAM0H,EAAQ/H,OAAS,EAC1CuC,EAAa4F,EAAQvD,KAAKpC,gBAAgBtC,IAmBtC,IAGQ0E,KAAK4F,GAAG1C,KAAK5H,GAMrB,MAAOL,IAEHuL,GAGAnC,GAAS,KACLrE,KAAKyC,UAAW,EAChBzC,KAAKgB,aAAa,WACnBhB,KAAK6B,kBAUxBmB,eAC2B,IAAZhD,KAAK4F,KACZ5F,KAAK4F,GAAG7C,QACR/C,KAAK4F,GAAK,MAQlBxL,MACI,IAAIiB,EAAQ2E,KAAK3E,OAAS,GAC1B,MAAMoL,EAASzG,KAAK2B,KAAK+E,OAAS,MAAQ,KAC1C,IAAIlK,EAAO,GAEPwD,KAAK2B,KAAKnF,OACR,QAAUiK,GAAqC,MAA3BE,OAAO3G,KAAK2B,KAAKnF,OAClC,OAASiK,GAAqC,KAA3BE,OAAO3G,KAAK2B,KAAKnF,SACzCA,EAAO,IAAMwD,KAAK2B,KAAKnF,MAGvBwD,KAAK2B,KAAKiF,oBACVvL,EAAM2E,KAAK2B,KAAKkF,gBF5HrB,WACH,MAAMC,EAAM9C,GAAQ,IAAI+C,MACxB,OAAID,IAAQhD,GACDC,EAAO,EAAGD,EAAOgD,GACrBA,EAAM,IAAM9C,EAAOD,KEwHgBiD,IAGjChH,KAAKpC,iBACNvC,EAAM4L,IAAM,GAEhB,MAAMC,ECjKP,SAAgB3M,GACnB,IAAIM,EAAM,GACV,IAAK,IAAIY,KAAKlB,EACNA,EAAIiL,eAAe/J,KACfZ,EAAIO,SACJP,GAAO,KACXA,GAAOsM,mBAAmB1L,GAAK,IAAM0L,mBAAmB5M,EAAIkB,KAGpE,OAAOZ,EDwJkBmJ,CAAO3I,GAE5B,OAAQoL,EACJ,QAF8C,IAArCzG,KAAK2B,KAAKyF,SAASpM,QAAQ,KAG5B,IAAMgF,KAAK2B,KAAKyF,SAAW,IAAMpH,KAAK2B,KAAKyF,UACnD5K,EACAwD,KAAK2B,KAAKtH,MACT6M,EAAa9L,OAAS,IAAM8L,EAAe,IAQpDhC,QACI,SAAUT,GACJ,iBAAkBA,GAAazE,KAAKiF,OAASF,EAAGzH,UAAU2H,OEzLjE,MAAMoC,EAAa,CACtBC,UAAWvC,GCKT9K,EAAK,0OACLC,EAAQ,CACV,SAAU,WAAY,YAAa,WAAY,OAAQ,WAAY,OAAQ,OAAQ,WAAY,OAAQ,YAAa,OAAQ,QAAS,UAElI,SAASqN,EAAM1M,GAClB,MAAMC,EAAMD,EAAKE,EAAIF,EAAIG,QAAQ,KAAMC,EAAIJ,EAAIG,QAAQ,MAC7C,GAAND,IAAiB,GAANE,IACXJ,EAAMA,EAAIK,UAAU,EAAGH,GAAKF,EAAIK,UAAUH,EAAGE,GAAGE,QAAQ,KAAM,KAAON,EAAIK,UAAUD,EAAGJ,EAAIO,SAE9F,IAAIG,EAAItB,EAAGuB,KAAKX,GAAO,IAAKT,EAAM,GAAIqB,EAAI,GAC1C,KAAOA,KACHrB,EAAIF,EAAMuB,IAAMF,EAAEE,IAAM,GAU5B,OARU,GAANV,IAAiB,GAANE,IACXb,EAAIsB,OAASZ,EACbV,EAAIM,KAAON,EAAIM,KAAKQ,UAAU,EAAGd,EAAIM,KAAKU,OAAS,GAAGD,QAAQ,KAAM,KACpEf,EAAIuB,UAAYvB,EAAIuB,UAAUR,QAAQ,IAAK,IAAIA,QAAQ,IAAK,IAAIA,QAAQ,KAAM,KAC9Ef,EAAIwB,SAAU,GAElBxB,EAAIyB,UAIR,SAAmBtB,EAAKF,GACpB,MAAMyB,EAAO,WAAYC,EAAQ1B,EAAKc,QAAQW,EAAM,KAAKE,MAAM,KACtC,KAArB3B,EAAK4B,OAAO,EAAG,IAA6B,IAAhB5B,EAAKe,QACjCW,EAAMG,OAAO,EAAG,GAEmB,KAAnC7B,EAAK4B,OAAO5B,EAAKe,OAAS,EAAG,IAC7BW,EAAMG,OAAOH,EAAMX,OAAS,EAAG,GAEnC,OAAOW,EAZSF,CAAUzB,EAAKA,EAAU,MACzCA,EAAI+B,SAaR,SAAkB/B,EAAKiB,GACnB,MAAMC,EAAO,GAMb,OALAD,EAAMF,QAAQ,6BAA6B,SAAUiB,EAAIC,EAAIC,GACrDD,IACAf,EAAKe,GAAMC,MAGZhB,EApBQa,CAAS/B,EAAKA,EAAW,OACjCA,ECtBJ,MAAMoN,UAAe9H,EAQxByC,YAAY/H,EAAKuH,EAAO,IACpBY,QACInI,GAAO,iBAAoBA,IAC3BuH,EAAOvH,EACPA,EAAM,MAENA,GACAA,EAAMmN,EAAMnN,GACZuH,EAAKyF,SAAWhN,EAAIM,KACpBiH,EAAK+E,OAA0B,UAAjBtM,EAAIK,UAAyC,QAAjBL,EAAIK,SAC9CkH,EAAKnF,KAAOpC,EAAIoC,KACZpC,EAAIiB,QACJsG,EAAKtG,MAAQjB,EAAIiB,QAEhBsG,EAAKjH,OACViH,EAAKyF,SAAWG,EAAM5F,EAAKjH,MAAMA,MAErCgH,EAAsB1B,KAAM2B,GAC5B3B,KAAK0G,OACD,MAAQ/E,EAAK+E,OACP/E,EAAK+E,OACe,oBAAblM,UAA4B,WAAaA,SAASC,SAC/DkH,EAAKyF,WAAazF,EAAKnF,OAEvBmF,EAAKnF,KAAOwD,KAAK0G,OAAS,MAAQ,MAEtC1G,KAAKoH,SACDzF,EAAKyF,WACoB,oBAAb5M,SAA2BA,SAAS4M,SAAW,aAC/DpH,KAAKxD,KACDmF,EAAKnF,OACoB,oBAAbhC,UAA4BA,SAASgC,KACvChC,SAASgC,KACTwD,KAAK0G,OACD,MACA,MAClB1G,KAAKqH,WAAa1F,EAAK0F,YAAc,CAAC,aACtCrH,KAAK0C,WAAa,GAClB1C,KAAKyH,YAAc,GACnBzH,KAAK0H,cAAgB,EACrB1H,KAAK2B,KAAO/E,OAAO+K,OAAO,CACtBtN,KAAM,aACNuN,OAAO,EACPC,iBAAiB,EACjBC,SAAS,EACTjB,eAAgB,IAChBkB,iBAAiB,EACjBC,oBAAoB,EACpBC,kBAAmB,CACfC,UAAW,MAEfC,iBAAkB,GAClBC,qBAAqB,GACtBzG,GACH3B,KAAK2B,KAAKtH,KAAO2F,KAAK2B,KAAKtH,KAAKc,QAAQ,MAAO,IAAM,IACtB,iBAApB6E,KAAK2B,KAAKtG,QACjB2E,KAAK2B,KAAKtG,MH7Cf,SAAgBgN,GACnB,IAAIC,EAAM,GACNC,EAAQF,EAAGrM,MAAM,KACrB,IAAK,IAAIP,EAAI,EAAG+M,EAAID,EAAMnN,OAAQK,EAAI+M,EAAG/M,IAAK,CAC1C,IAAIgN,EAAOF,EAAM9M,GAAGO,MAAM,KAC1BsM,EAAII,mBAAmBD,EAAK,KAAOC,mBAAmBD,EAAK,IAE/D,OAAOH,EGsCmB9I,CAAOQ,KAAK2B,KAAKtG,QAGvC2E,KAAKvD,GAAK,KACVuD,KAAK2I,SAAW,KAChB3I,KAAK4I,aAAe,KACpB5I,KAAK6I,YAAc,KAEnB7I,KAAK8I,iBAAmB,KACQ,mBAArBjJ,mBACHG,KAAK2B,KAAKyG,qBAIVvI,iBAAiB,gBAAgB,KACzBG,KAAK+I,YAEL/I,KAAK+I,UAAUvI,qBACfR,KAAK+I,UAAUhG,YAEpB,GAEe,cAAlB/C,KAAKoH,WACLpH,KAAKgJ,qBAAuB,KACxBhJ,KAAKiD,QAAQ,kBAAmB,CAC5BZ,YAAa,6BAGrBxC,iBAAiB,UAAWG,KAAKgJ,sBAAsB,KAG/DhJ,KAAK6C,OASToG,gBAAgBhE,GACZ,MAAM5J,EAodd,SAAed,GACX,MAAM2O,EAAI,GACV,IAAK,IAAIzN,KAAKlB,EACNA,EAAIiL,eAAe/J,KACnByN,EAAEzN,GAAKlB,EAAIkB,IAGnB,OAAOyN,EA3dWC,CAAMnJ,KAAK2B,KAAKtG,OAE9BA,EAAM+N,ICnFU,EDqFhB/N,EAAM0N,UAAY9D,EAEdjF,KAAKvD,KACLpB,EAAMgO,IAAMrJ,KAAKvD,IACrB,MAAMkF,EAAO/E,OAAO+K,OAAO,GAAI3H,KAAK2B,KAAKwG,iBAAiBlD,GAAOjF,KAAK2B,KAAM,CACxEtG,MAAAA,EACAsH,OAAQ3C,KACRoH,SAAUpH,KAAKoH,SACfV,OAAQ1G,KAAK0G,OACblK,KAAMwD,KAAKxD,OAEf,OAAO,IAAI6K,EAAWpC,GAAMtD,GAOhCkB,OACI,IAAIkG,EACJ,GAAI/I,KAAK2B,KAAKoG,iBACVP,EAAO8B,wBACmC,IAA1CtJ,KAAKqH,WAAWrM,QAAQ,aACxB+N,EAAY,gBAEX,CAAA,GAAI,IAAM/I,KAAKqH,WAAWjM,OAK3B,YAHA4E,KAAK6B,cAAa,KACd7B,KAAKgB,aAAa,QAAS,6BAC5B,GAIH+H,EAAY/I,KAAKqH,WAAW,GAEhCrH,KAAK0C,WAAa,UAElB,IACIqG,EAAY/I,KAAKiJ,gBAAgBF,GAErC,MAAO9N,GAGH,OAFA+E,KAAKqH,WAAWkC,aAChBvJ,KAAK6C,OAGTkG,EAAUlG,OACV7C,KAAKwJ,aAAaT,GAOtBS,aAAaT,GACL/I,KAAK+I,WACL/I,KAAK+I,UAAUvI,qBAGnBR,KAAK+I,UAAYA,EAEjBA,EACKnJ,GAAG,QAASI,KAAKyJ,QAAQ3H,KAAK9B,OAC9BJ,GAAG,SAAUI,KAAK0D,SAAS5B,KAAK9B,OAChCJ,GAAG,QAASI,KAAK4C,QAAQd,KAAK9B,OAC9BJ,GAAG,SAASwC,GAAUpC,KAAKiD,QAAQ,kBAAmBb,KAQ/DsH,MAAMzE,GACF,IAAI8D,EAAY/I,KAAKiJ,gBAAgBhE,GACjC0E,GAAS,EACbnC,EAAO8B,uBAAwB,EAC/B,MAAMM,EAAkB,KAChBD,IAEJZ,EAAU7F,KAAK,CAAC,CAAE/F,KAAM,OAAQ7B,KAAM,WACtCyN,EAAU5I,KAAK,UAAU0J,IACrB,IAAIF,EAEJ,GAAI,SAAWE,EAAI1M,MAAQ,UAAY0M,EAAIvO,KAAM,CAG7C,GAFA0E,KAAK8J,WAAY,EACjB9J,KAAKgB,aAAa,YAAa+H,IAC1BA,EACD,OACJvB,EAAO8B,sBAAwB,cAAgBP,EAAU9D,KACzDjF,KAAK+I,UAAUgB,OAAM,KACbJ,GAEA,WAAa3J,KAAK0C,aAEtBsH,IACAhK,KAAKwJ,aAAaT,GAClBA,EAAU7F,KAAK,CAAC,CAAE/F,KAAM,aACxB6C,KAAKgB,aAAa,UAAW+H,GAC7BA,EAAY,KACZ/I,KAAK8J,WAAY,EACjB9J,KAAKiK,gBAGR,CACD,MAAMpE,EAAM,IAAI3D,MAAM,eAEtB2D,EAAIkD,UAAYA,EAAU9D,KAC1BjF,KAAKgB,aAAa,eAAgB6E,SAI9C,SAASqE,IACDP,IAGJA,GAAS,EACTK,IACAjB,EAAUhG,QACVgG,EAAY,MAGhB,MAAMxC,EAAUV,IACZ,MAAMsE,EAAQ,IAAIjI,MAAM,gBAAkB2D,GAE1CsE,EAAMpB,UAAYA,EAAU9D,KAC5BiF,IACAlK,KAAKgB,aAAa,eAAgBmJ,IAEtC,SAASC,IACL7D,EAAQ,oBAGZ,SAASJ,IACLI,EAAQ,iBAGZ,SAAS8D,EAAUC,GACXvB,GAAauB,EAAGrF,OAAS8D,EAAU9D,MACnCiF,IAIR,MAAMF,EAAU,KACZjB,EAAUxI,eAAe,OAAQqJ,GACjCb,EAAUxI,eAAe,QAASgG,GAClCwC,EAAUxI,eAAe,QAAS6J,GAClCpK,KAAKI,IAAI,QAAS+F,GAClBnG,KAAKI,IAAI,YAAaiK,IAE1BtB,EAAU5I,KAAK,OAAQyJ,GACvBb,EAAU5I,KAAK,QAASoG,GACxBwC,EAAU5I,KAAK,QAASiK,GACxBpK,KAAKG,KAAK,QAASgG,GACnBnG,KAAKG,KAAK,YAAakK,GACvBtB,EAAUlG,OAOdQ,SAOI,GANArD,KAAK0C,WAAa,OAClB8E,EAAO8B,sBAAwB,cAAgBtJ,KAAK+I,UAAU9D,KAC9DjF,KAAKgB,aAAa,QAClBhB,KAAKiK,QAGD,SAAWjK,KAAK0C,YAChB1C,KAAK2B,KAAKmG,SACV9H,KAAK+I,UAAUgB,MAAO,CACtB,IAAItO,EAAI,EACR,MAAM+M,EAAIxI,KAAK2I,SAASvN,OACxB,KAAOK,EAAI+M,EAAG/M,IACVuE,KAAK0J,MAAM1J,KAAK2I,SAASlN,KASrCiI,SAASH,GACL,GAAI,YAAcvD,KAAK0C,YACnB,SAAW1C,KAAK0C,YAChB,YAAc1C,KAAK0C,WAInB,OAHA1C,KAAKgB,aAAa,SAAUuC,GAE5BvD,KAAKgB,aAAa,aACVuC,EAAOpG,MACX,IAAK,OACD6C,KAAKuK,YAAYC,KAAKjD,MAAMhE,EAAOjI,OACnC,MACJ,IAAK,OACD0E,KAAKyK,mBACLzK,KAAK0K,WAAW,QAChB1K,KAAKgB,aAAa,QAClBhB,KAAKgB,aAAa,QAClB,MACJ,IAAK,QACD,MAAM6E,EAAM,IAAI3D,MAAM,gBAEtB2D,EAAI8E,KAAOpH,EAAOjI,KAClB0E,KAAK4C,QAAQiD,GACb,MACJ,IAAK,UACD7F,KAAKgB,aAAa,OAAQuC,EAAOjI,MACjC0E,KAAKgB,aAAa,UAAWuC,EAAOjI,OAapDiP,YAAYjP,GACR0E,KAAKgB,aAAa,YAAa1F,GAC/B0E,KAAKvD,GAAKnB,EAAK+N,IACfrJ,KAAK+I,UAAU1N,MAAMgO,IAAM/N,EAAK+N,IAChCrJ,KAAK2I,SAAW3I,KAAK4K,eAAetP,EAAKqN,UACzC3I,KAAK4I,aAAetN,EAAKsN,aACzB5I,KAAK6I,YAAcvN,EAAKuN,YACxB7I,KAAK6K,WAAavP,EAAKuP,WACvB7K,KAAKqD,SAED,WAAarD,KAAK0C,YAEtB1C,KAAKyK,mBAOTA,mBACIzK,KAAKgC,eAAehC,KAAK8I,kBACzB9I,KAAK8I,iBAAmB9I,KAAK6B,cAAa,KACtC7B,KAAKiD,QAAQ,kBACdjD,KAAK4I,aAAe5I,KAAK6I,aACxB7I,KAAK2B,KAAKqE,WACVhG,KAAK8I,iBAAiB5C,QAQ9BuD,UACIzJ,KAAKyH,YAAYvL,OAAO,EAAG8D,KAAK0H,eAIhC1H,KAAK0H,cAAgB,EACjB,IAAM1H,KAAKyH,YAAYrM,OACvB4E,KAAKgB,aAAa,SAGlBhB,KAAKiK,QAQbA,QACI,GAAI,WAAajK,KAAK0C,YAClB1C,KAAK+I,UAAUtG,WACdzC,KAAK8J,WACN9J,KAAKyH,YAAYrM,OAAQ,CACzB,MAAM+H,EAAUnD,KAAK8K,qBACrB9K,KAAK+I,UAAU7F,KAAKC,GAGpBnD,KAAK0H,cAAgBvE,EAAQ/H,OAC7B4E,KAAKgB,aAAa,UAS1B8J,qBAII,KAH+B9K,KAAK6K,YACR,YAAxB7K,KAAK+I,UAAU9D,MACfjF,KAAKyH,YAAYrM,OAAS,GAE1B,OAAO4E,KAAKyH,YAEhB,IAAIsD,EAAc,EAClB,IAAK,IAAItP,EAAI,EAAGA,EAAIuE,KAAKyH,YAAYrM,OAAQK,IAAK,CAC9C,MAAMH,EAAO0E,KAAKyH,YAAYhM,GAAGH,KAIjC,GAHIA,IACAyP,GRvYO,iBADIxQ,EQwYee,GRjY1C,SAAoBT,GAChB,IAAImQ,EAAI,EAAG5P,EAAS,EACpB,IAAK,IAAIK,EAAI,EAAG+M,EAAI3N,EAAIO,OAAQK,EAAI+M,EAAG/M,IACnCuP,EAAInQ,EAAI6D,WAAWjD,GACfuP,EAAI,IACJ5P,GAAU,EAEL4P,EAAI,KACT5P,GAAU,EAEL4P,EAAI,OAAUA,GAAK,MACxB5P,GAAU,GAGVK,IACAL,GAAU,GAGlB,OAAOA,EAvBI6P,CAAW1Q,GAGf4J,KAAK+G,KAPQ,MAOF3Q,EAAI4Q,YAAc5Q,EAAI6Q,QQqY5B3P,EAAI,GAAKsP,EAAc/K,KAAK6K,WAC5B,OAAO7K,KAAKyH,YAAY1G,MAAM,EAAGtF,GAErCsP,GAAe,ER7YpB,IAAoBxQ,EQ+YnB,OAAOyF,KAAKyH,YAWhBrE,MAAMyG,EAAKwB,EAAStL,GAEhB,OADAC,KAAK0K,WAAW,UAAWb,EAAKwB,EAAStL,GAClCC,KAEXkD,KAAK2G,EAAKwB,EAAStL,GAEf,OADAC,KAAK0K,WAAW,UAAWb,EAAKwB,EAAStL,GAClCC,KAWX0K,WAAWvN,EAAM7B,EAAM+P,EAAStL,GAS5B,GARI,mBAAsBzE,IACtByE,EAAKzE,EACLA,OAAOgQ,GAEP,mBAAsBD,IACtBtL,EAAKsL,EACLA,EAAU,MAEV,YAAcrL,KAAK0C,YAAc,WAAa1C,KAAK0C,WACnD,QAEJ2I,EAAUA,GAAW,IACbE,UAAW,IAAUF,EAAQE,SACrC,MAAMhI,EAAS,CACXpG,KAAMA,EACN7B,KAAMA,EACN+P,QAASA,GAEbrL,KAAKgB,aAAa,eAAgBuC,GAClCvD,KAAKyH,YAAYvH,KAAKqD,GAClBxD,GACAC,KAAKG,KAAK,QAASJ,GACvBC,KAAKiK,QAOTlH,QACI,MAAMA,EAAQ,KACV/C,KAAKiD,QAAQ,gBACbjD,KAAK+I,UAAUhG,SAEbyI,EAAkB,KACpBxL,KAAKI,IAAI,UAAWoL,GACpBxL,KAAKI,IAAI,eAAgBoL,GACzBzI,KAEE0I,EAAiB,KAEnBzL,KAAKG,KAAK,UAAWqL,GACrBxL,KAAKG,KAAK,eAAgBqL,IAqB9B,MAnBI,YAAcxL,KAAK0C,YAAc,SAAW1C,KAAK0C,aACjD1C,KAAK0C,WAAa,UACd1C,KAAKyH,YAAYrM,OACjB4E,KAAKG,KAAK,SAAS,KACXH,KAAK8J,UACL2B,IAGA1I,OAIH/C,KAAK8J,UACV2B,IAGA1I,KAGD/C,KAOX4C,QAAQiD,GACJ2B,EAAO8B,uBAAwB,EAC/BtJ,KAAKgB,aAAa,QAAS6E,GAC3B7F,KAAKiD,QAAQ,kBAAmB4C,GAOpC5C,QAAQb,EAAQC,GACR,YAAcrC,KAAK0C,YACnB,SAAW1C,KAAK0C,YAChB,YAAc1C,KAAK0C,aAEnB1C,KAAKgC,eAAehC,KAAK8I,kBAEzB9I,KAAK+I,UAAUvI,mBAAmB,SAElCR,KAAK+I,UAAUhG,QAEf/C,KAAK+I,UAAUvI,qBACoB,mBAAxBC,qBACPA,oBAAoB,UAAWT,KAAKgJ,sBAAsB,GAG9DhJ,KAAK0C,WAAa,SAElB1C,KAAKvD,GAAK,KAEVuD,KAAKgB,aAAa,QAASoB,EAAQC,GAGnCrC,KAAKyH,YAAc,GACnBzH,KAAK0H,cAAgB,GAU7BkD,eAAejC,GACX,MAAM+C,EAAmB,GACzB,IAAIjQ,EAAI,EACR,MAAMkQ,EAAIhD,EAASvN,OACnB,KAAOK,EAAIkQ,EAAGlQ,KACLuE,KAAKqH,WAAWrM,QAAQ2N,EAASlN,KAClCiQ,EAAiBxL,KAAKyI,EAASlN,IAEvC,OAAOiQ,GAGflE,EAAO/M,SCpiBiB,EC5BA+M,EAAO/M,SCInB,MAACA,EAAW,EACjB,IAAImR,GACX,SAAWA,GACPA,EAAWA,EAAoB,QAAI,GAAK,UACxCA,EAAWA,EAAuB,WAAI,GAAK,aAC3CA,EAAWA,EAAkB,MAAI,GAAK,QACtCA,EAAWA,EAAgB,IAAI,GAAK,MACpCA,EAAWA,EAA0B,cAAI,GAAK,gBAC9CA,EAAWA,EAAyB,aAAI,GAAK,eAC7CA,EAAWA,EAAuB,WAAI,GAAK,aAP/C,CAQGA,IAAeA,EAAa,KA8CxB,MAAMC,UAAgBnM,EACzByC,cACII,QAOJuJ,IAAIvR,GACA,IAAIgJ,EACJ,GAAmB,iBAARhJ,EAeP,MAAM,IAAI2H,MAAM,iBAAmB3H,GAdnCgJ,EAASvD,KAAK+L,aAAaxR,GACvBgJ,EAAOpG,OAASyO,EAAWI,cAC3BzI,EAAOpG,OAASyO,EAAWK,WAEA,IAAvB1I,EAAO2I,aACP3J,MAAMvB,aAAa,UAAWuC,GAKlChB,MAAMvB,aAAa,UAAWuC,GAa1CwI,aAAalR,GACT,IAAIY,EAAI,EAER,MAAM4D,EAAI,CACNlC,KAAMwJ,OAAO9L,EAAIF,OAAO,KAE5B,QAA2B2Q,IAAvBM,EAAWvM,EAAElC,MACb,MAAM,IAAI+E,MAAM,uBAAyB7C,EAAElC,MAG/C,GAAIkC,EAAElC,OAASyO,EAAWI,cACtB3M,EAAElC,OAASyO,EAAWK,WAAY,CAClC,MAAME,EAAQ1Q,EAAI,EAClB,KAA2B,MAApBZ,EAAIF,SAASc,IAAcA,GAAKZ,EAAIO,SAC3C,MAAMgR,EAAMvR,EAAIK,UAAUiR,EAAO1Q,GACjC,GAAI2Q,GAAOzF,OAAOyF,IAA0B,MAAlBvR,EAAIF,OAAOc,GACjC,MAAM,IAAIyG,MAAM,uBAEpB7C,EAAE6M,YAAcvF,OAAOyF,GAG3B,GAAI,MAAQvR,EAAIF,OAAOc,EAAI,GAAI,CAC3B,MAAM0Q,EAAQ1Q,EAAI,EAClB,OAASA,GAAG,CAER,GAAI,MADMZ,EAAIF,OAAOc,GAEjB,MACJ,GAAIA,IAAMZ,EAAIO,OACV,MAERiE,EAAEgN,IAAMxR,EAAIK,UAAUiR,EAAO1Q,QAG7B4D,EAAEgN,IAAM,IAGZ,MAAMC,EAAOzR,EAAIF,OAAOc,EAAI,GAC5B,GAAI,KAAO6Q,GAAQ3F,OAAO2F,IAASA,EAAM,CACrC,MAAMH,EAAQ1Q,EAAI,EAClB,OAASA,GAAG,CACR,MAAMuP,EAAInQ,EAAIF,OAAOc,GACrB,GAAI,MAAQuP,GAAKrE,OAAOqE,IAAMA,EAAG,GAC3BvP,EACF,MAEJ,GAAIA,IAAMZ,EAAIO,OACV,MAERiE,EAAE5C,GAAKkK,OAAO9L,EAAIK,UAAUiR,EAAO1Q,EAAI,IAG3C,GAAIZ,EAAIF,SAASc,GAAI,CACjB,MAAM8Q,EAgClB,SAAkB1R,GACd,IACI,OAAO2P,KAAKjD,MAAM1M,GAEtB,MAAOI,GACH,OAAO,GArCauR,CAAS3R,EAAIoB,OAAOR,IACpC,IAAIoQ,EAAQY,eAAepN,EAAElC,KAAMoP,GAI/B,MAAM,IAAIrK,MAAM,mBAHhB7C,EAAE/D,KAAOiR,EAMjB,OAAOlN,EAEXqN,sBAAsBvP,EAAMoP,GACxB,OAAQpP,GACJ,KAAKyO,EAAWe,QACZ,MAA0B,iBAAZJ,EAClB,KAAKX,EAAWgB,WACZ,YAAmBtB,IAAZiB,EACX,KAAKX,EAAWiB,cACZ,MAA0B,iBAAZN,GAA2C,iBAAZA,EACjD,KAAKX,EAAWkB,MAChB,KAAKlB,EAAWI,aACZ,OAAOlL,MAAMiM,QAAQR,IAAYA,EAAQnR,OAAS,EACtD,KAAKwQ,EAAWoB,IAChB,KAAKpB,EAAWK,WACZ,OAAOnL,MAAMiM,QAAQR,IAMjCU,yDA5KoB,qCAcjB,MAOHjJ,OAAOzJ,GACH,MAAO,CAACyF,KAAKkN,eAAe3S,IAKhC2S,eAAe3S,GAEX,IAAIM,EAAM,GAAKN,EAAI4C,KAmBnB,OAjBI5C,EAAI4C,OAASyO,EAAWI,cACxBzR,EAAI4C,OAASyO,EAAWK,aACxBpR,GAAON,EAAI2R,YAAc,KAIzB3R,EAAI8R,KAAO,MAAQ9R,EAAI8R,MACvBxR,GAAON,EAAI8R,IAAM,KAGjB,MAAQ9R,EAAIkC,KACZ5B,GAAON,EAAIkC,IAGX,MAAQlC,EAAIe,OACZT,GAAO2P,KAAK2C,UAAU5S,EAAIe,OAEvBT,gBCtDR,SAAS+E,EAAGrF,EAAK+L,EAAIvG,GAExB,OADAxF,EAAIqF,GAAG0G,EAAIvG,GACJ,WACHxF,EAAI6F,IAAIkG,EAAIvG,ICIpB,MAAMqN,EAAkBxQ,OAAOyQ,OAAO,CAClCC,QAAS,EACTC,cAAe,EACfC,WAAY,EACZC,cAAe,EAEfC,YAAa,EACbnN,eAAgB,IAEb,MAAMiH,UAAe9H,EAMxByC,YAAYwL,EAAItB,EAAK1K,GACjBY,QACAvC,KAAK4N,WAAY,EACjB5N,KAAK6N,cAAe,EACpB7N,KAAK8N,cAAgB,GACrB9N,KAAK+N,WAAa,GAClB/N,KAAKgO,IAAM,EACXhO,KAAKiO,KAAO,GACZjO,KAAKkO,MAAQ,GACblO,KAAK2N,GAAKA,EACV3N,KAAKqM,IAAMA,EACP1K,GAAQA,EAAKwM,OACbnO,KAAKmO,KAAOxM,EAAKwM,MAEjBnO,KAAK2N,GAAGS,cACRpO,KAAK6C,OAObwL,YACI,GAAIrO,KAAKsO,KACL,OACJ,MAAMX,EAAK3N,KAAK2N,GAChB3N,KAAKsO,KAAO,CACR1O,EAAG+N,EAAI,OAAQ3N,KAAK+F,OAAOjE,KAAK9B,OAChCJ,EAAG+N,EAAI,SAAU3N,KAAKuO,SAASzM,KAAK9B,OACpCJ,EAAG+N,EAAI,QAAS3N,KAAKuG,QAAQzE,KAAK9B,OAClCJ,EAAG+N,EAAI,QAAS3N,KAAKmG,QAAQrE,KAAK9B,QAMtCwO,aACA,QAASxO,KAAKsO,KAOlBhB,UACI,OAAItN,KAAK4N,YAET5N,KAAKqO,YACArO,KAAK2N,GAAkB,eACxB3N,KAAK2N,GAAG9K,OACR,SAAW7C,KAAK2N,GAAGc,aACnBzO,KAAK+F,UALE/F,KAWf6C,OACI,OAAO7C,KAAKsN,UAQhBpK,QAAQrC,GAGJ,OAFAA,EAAK6N,QAAQ,WACb1O,KAAKY,KAAKP,MAAML,KAAMa,GACfb,KASXY,KAAK0F,KAAOzF,GACR,GAAIuM,EAAgB5H,eAAec,GAC/B,MAAM,IAAIpE,MAAM,IAAMoE,EAAK,8BAE/BzF,EAAK6N,QAAQpI,GACb,MAAM/C,EAAS,CACXpG,KAAMyO,EAAWkB,MACjBxR,KAAMuF,EAEV0C,QAAiB,IAGjB,GAFAA,EAAO8H,QAAQE,UAAmC,IAAxBvL,KAAKkO,MAAM3C,SAEjC,mBAAsB1K,EAAKA,EAAKzF,OAAS,GAAI,CAC7C,MAAMqB,EAAKuD,KAAKgO,MACVW,EAAM9N,EAAK+N,MACjB5O,KAAK6O,qBAAqBpS,EAAIkS,GAC9BpL,EAAO9G,GAAKA,EAEhB,MAAMqS,EAAsB9O,KAAK2N,GAAGoB,QAChC/O,KAAK2N,GAAGoB,OAAOhG,WACf/I,KAAK2N,GAAGoB,OAAOhG,UAAUtG,SAW7B,OAVsBzC,KAAKkO,MAAMc,YAAcF,IAAwB9O,KAAK4N,aAGnE5N,KAAK4N,UACV5N,KAAKuD,OAAOA,GAGZvD,KAAK+N,WAAW7N,KAAKqD,IAEzBvD,KAAKkO,MAAQ,GACNlO,KAKX6O,qBAAqBpS,EAAIkS,GACrB,MAAMM,EAAUjP,KAAKkO,MAAMe,QAC3B,QAAgB3D,IAAZ2D,EAEA,YADAjP,KAAKiO,KAAKxR,GAAMkS,GAIpB,MAAMO,EAAQlP,KAAK2N,GAAG9L,cAAa,YACxB7B,KAAKiO,KAAKxR,GACjB,IAAK,IAAIhB,EAAI,EAAGA,EAAIuE,KAAK+N,WAAW3S,OAAQK,IACpCuE,KAAK+N,WAAWtS,GAAGgB,KAAOA,GAC1BuD,KAAK+N,WAAW7R,OAAOT,EAAG,GAGlCkT,EAAInR,KAAKwC,KAAM,IAAIkC,MAAM,8BAC1B+M,GACHjP,KAAKiO,KAAKxR,GAAM,IAAIoE,KAEhBb,KAAK2N,GAAG3L,eAAekN,GACvBP,EAAItO,MAAML,KAAM,CAAC,QAASa,KASlC0C,OAAOA,GACHA,EAAO8I,IAAMrM,KAAKqM,IAClBrM,KAAK2N,GAAGwB,QAAQ5L,GAOpBwC,SAC4B,mBAAb/F,KAAKmO,KACZnO,KAAKmO,MAAM7S,IACP0E,KAAKuD,OAAO,CAAEpG,KAAMyO,EAAWe,QAASrR,KAAAA,OAI5C0E,KAAKuD,OAAO,CAAEpG,KAAMyO,EAAWe,QAASrR,KAAM0E,KAAKmO,OAS3D5H,QAAQV,GACC7F,KAAK4N,WACN5N,KAAKgB,aAAa,gBAAiB6E,GAS3CM,QAAQ/D,GACJpC,KAAK4N,WAAY,EACjB5N,KAAK6N,cAAe,SACb7N,KAAKvD,GACZuD,KAAKgB,aAAa,aAAcoB,GAQpCmM,SAAShL,GAEL,GADsBA,EAAO8I,MAAQrM,KAAKqM,IAG1C,OAAQ9I,EAAOpG,MACX,KAAKyO,EAAWe,QACZ,GAAIpJ,EAAOjI,MAAQiI,EAAOjI,KAAK+N,IAAK,CAChC,MAAM5M,EAAK8G,EAAOjI,KAAK+N,IACvBrJ,KAAKoP,UAAU3S,QAGfuD,KAAKgB,aAAa,gBAAiB,IAAIkB,MAAM,8LAEjD,MACJ,KAAK0J,EAAWkB,MACZ9M,KAAKqP,QAAQ9L,GACb,MACJ,KAAKqI,EAAWI,aAEZ,MACJ,KAAKJ,EAAWoB,IACZhN,KAAKsP,MAAM/L,GACX,MACJ,KAAKqI,EAAWK,WAEZ,MACJ,KAAKL,EAAWgB,WACZ5M,KAAKuP,eACL,MACJ,KAAK3D,EAAWiB,cACZ7M,KAAKiN,UACL,MAAMpH,EAAM,IAAI3D,MAAMqB,EAAOjI,KAAKkU,SAElC3J,EAAIvK,KAAOiI,EAAOjI,KAAKA,KACvB0E,KAAKgB,aAAa,gBAAiB6E,IAU/CwJ,QAAQ9L,GACJ,MAAM1C,EAAO0C,EAAOjI,MAAQ,GACxB,MAAQiI,EAAO9G,IACfoE,EAAKX,KAAKF,KAAK2O,IAAIpL,EAAO9G,KAE1BuD,KAAK4N,UACL5N,KAAKyP,UAAU5O,GAGfb,KAAK8N,cAAc5N,KAAKtD,OAAOyQ,OAAOxM,IAG9C4O,UAAU5O,GACN,GAAIb,KAAK0P,eAAiB1P,KAAK0P,cAActU,OAAQ,CACjD,MAAM6F,EAAYjB,KAAK0P,cAAc3O,QACrC,IAAK,MAAM4O,KAAY1O,EACnB0O,EAAStP,MAAML,KAAMa,GAG7B0B,MAAM3B,KAAKP,MAAML,KAAMa,GAO3B8N,IAAIlS,GACA,MAAM0E,EAAOnB,KACb,IAAI4P,GAAO,EACX,OAAO,YAAa/O,GAEZ+O,IAEJA,GAAO,EACPzO,EAAKoC,OAAO,CACRpG,KAAMyO,EAAWoB,IACjBvQ,GAAIA,EACJnB,KAAMuF,MAUlByO,MAAM/L,GACF,MAAMoL,EAAM3O,KAAKiO,KAAK1K,EAAO9G,IACzB,mBAAsBkS,IACtBA,EAAItO,MAAML,KAAMuD,EAAOjI,aAChB0E,KAAKiO,KAAK1K,EAAO9G,KAUhC2S,UAAU3S,GACNuD,KAAKvD,GAAKA,EACVuD,KAAK4N,WAAY,EACjB5N,KAAK6N,cAAe,EACpB7N,KAAK6P,eACL7P,KAAKgB,aAAa,WAOtB6O,eACI7P,KAAK8N,cAAc9Q,SAAS6D,GAASb,KAAKyP,UAAU5O,KACpDb,KAAK8N,cAAgB,GACrB9N,KAAK+N,WAAW/Q,SAASuG,GAAWvD,KAAKuD,OAAOA,KAChDvD,KAAK+N,WAAa,GAOtBwB,eACIvP,KAAKiN,UACLjN,KAAKmG,QAAQ,wBASjB8G,UACQjN,KAAKsO,OAELtO,KAAKsO,KAAKtR,SAAS8S,GAAeA,MAClC9P,KAAKsO,UAAOhD,GAEhBtL,KAAK2N,GAAa,SAAE3N,MAQxBwN,aAUI,OATIxN,KAAK4N,WACL5N,KAAKuD,OAAO,CAAEpG,KAAMyO,EAAWgB,aAGnC5M,KAAKiN,UACDjN,KAAK4N,WAEL5N,KAAKmG,QAAQ,wBAEVnG,KAQX+C,QACI,OAAO/C,KAAKwN,aAShBjC,SAASA,GAEL,OADAvL,KAAKkO,MAAM3C,SAAWA,EACfvL,KASPgP,eAEA,OADAhP,KAAKkO,MAAMc,UAAW,EACfhP,KAiBXiP,QAAQA,GAEJ,OADAjP,KAAKkO,MAAMe,QAAUA,EACdjP,KASX+P,MAAMJ,GAGF,OAFA3P,KAAK0P,cAAgB1P,KAAK0P,eAAiB,GAC3C1P,KAAK0P,cAAcxP,KAAKyP,GACjB3P,KASXgQ,WAAWL,GAGP,OAFA3P,KAAK0P,cAAgB1P,KAAK0P,eAAiB,GAC3C1P,KAAK0P,cAAchB,QAAQiB,GACpB3P,KAQXiQ,OAAON,GACH,IAAK3P,KAAK0P,cACN,OAAO1P,KAEX,GAAI2P,EAAU,CACV,MAAM1O,EAAYjB,KAAK0P,cACvB,IAAK,IAAIjU,EAAI,EAAGA,EAAIwF,EAAU7F,OAAQK,IAClC,GAAIkU,IAAa1O,EAAUxF,GAEvB,OADAwF,EAAU/E,OAAOT,EAAG,GACbuE,UAKfA,KAAK0P,cAAgB,GAEzB,OAAO1P,KAQXkQ,eACI,OAAOlQ,KAAK0P,eAAiB,QC7drCS,EAAiBC,EAcjB,SAASA,EAAQzO,GACfA,EAAOA,GAAQ,GACf3B,KAAKqQ,GAAK1O,EAAK2O,KAAO,IACtBtQ,KAAKuQ,IAAM5O,EAAK4O,KAAO,IACvBvQ,KAAKwQ,OAAS7O,EAAK6O,QAAU,EAC7BxQ,KAAKyQ,OAAS9O,EAAK8O,OAAS,GAAK9O,EAAK8O,QAAU,EAAI9O,EAAK8O,OAAS,EAClEzQ,KAAK0Q,SAAW,EAUlBN,EAAQ9S,UAAUqT,SAAW,WAC3B,IAAIN,EAAKrQ,KAAKqQ,GAAKlM,KAAKyM,IAAI5Q,KAAKwQ,OAAQxQ,KAAK0Q,YAC9C,GAAI1Q,KAAKyQ,OAAQ,CACf,IAAII,EAAQ1M,KAAK2M,SACbC,EAAY5M,KAAKC,MAAMyM,EAAO7Q,KAAKyQ,OAASJ,GAChDA,EAAoC,IAAN,EAAxBlM,KAAKC,MAAa,GAAPyM,IAAwBR,EAAKU,EAAYV,EAAKU,EAEjE,OAAgC,EAAzB5M,KAAKmM,IAAID,EAAIrQ,KAAKuQ,MAS3BH,EAAQ9S,UAAU0T,MAAQ,WACxBhR,KAAK0Q,SAAW,GASlBN,EAAQ9S,UAAU2T,OAAS,SAASX,GAClCtQ,KAAKqQ,GAAKC,GASZF,EAAQ9S,UAAU4T,OAAS,SAASX,GAClCvQ,KAAKuQ,IAAMA,GASbH,EAAQ9S,UAAU6T,UAAY,SAASV,GACrCzQ,KAAKyQ,OAASA,GC3ET,MAAMW,UAAgB1R,EACzByC,YAAY/H,EAAKuH,GACb,IAAI0P,EACJ9O,QACAvC,KAAKsR,KAAO,GACZtR,KAAKsO,KAAO,GACRlU,GAAO,iBAAoBA,IAC3BuH,EAAOvH,EACPA,OAAMkR,IAEV3J,EAAOA,GAAQ,IACVtH,KAAOsH,EAAKtH,MAAQ,aACzB2F,KAAK2B,KAAOA,EACZD,EAAsB1B,KAAM2B,GAC5B3B,KAAKuR,cAAmC,IAAtB5P,EAAK4P,cACvBvR,KAAKwR,qBAAqB7P,EAAK6P,sBAAwBC,EAAAA,GACvDzR,KAAK0R,kBAAkB/P,EAAK+P,mBAAqB,KACjD1R,KAAK2R,qBAAqBhQ,EAAKgQ,sBAAwB,KACvD3R,KAAK4R,oBAAwD,QAAnCP,EAAK1P,EAAKiQ,2BAAwC,IAAPP,EAAgBA,EAAK,IAC1FrR,KAAK6R,QAAU,IAAIzB,EAAQ,CACvBE,IAAKtQ,KAAK0R,oBACVnB,IAAKvQ,KAAK2R,uBACVlB,OAAQzQ,KAAK4R,wBAEjB5R,KAAKiP,QAAQ,MAAQtN,EAAKsN,QAAU,IAAQtN,EAAKsN,SACjDjP,KAAKyO,YAAc,SACnBzO,KAAK5F,IAAMA,EACX,MAAM0X,EAAUnQ,EAAKoQ,QAAUA,EAC/B/R,KAAKgS,QAAU,IAAIF,EAAQG,QAC3BjS,KAAKkS,QAAU,IAAIJ,EAAQjG,QAC3B7L,KAAKoO,cAAoC,IAArBzM,EAAKwQ,YACrBnS,KAAKoO,cACLpO,KAAK6C,OAEb0O,aAAaa,GACT,OAAK9R,UAAUlF,QAEf4E,KAAKqS,gBAAkBD,EAChBpS,MAFIA,KAAKqS,cAIpBb,qBAAqBY,GACjB,YAAU9G,IAAN8G,EACOpS,KAAKsS,uBAChBtS,KAAKsS,sBAAwBF,EACtBpS,MAEX0R,kBAAkBU,GACd,IAAIf,EACJ,YAAU/F,IAAN8G,EACOpS,KAAKuS,oBAChBvS,KAAKuS,mBAAqBH,EACF,QAAvBf,EAAKrR,KAAK6R,eAA4B,IAAPR,GAAyBA,EAAGJ,OAAOmB,GAC5DpS,MAEX4R,oBAAoBQ,GAChB,IAAIf,EACJ,YAAU/F,IAAN8G,EACOpS,KAAKwS,sBAChBxS,KAAKwS,qBAAuBJ,EACJ,QAAvBf,EAAKrR,KAAK6R,eAA4B,IAAPR,GAAyBA,EAAGF,UAAUiB,GAC/DpS,MAEX2R,qBAAqBS,GACjB,IAAIf,EACJ,YAAU/F,IAAN8G,EACOpS,KAAKyS,uBAChBzS,KAAKyS,sBAAwBL,EACL,QAAvBf,EAAKrR,KAAK6R,eAA4B,IAAPR,GAAyBA,EAAGH,OAAOkB,GAC5DpS,MAEXiP,QAAQmD,GACJ,OAAK9R,UAAUlF,QAEf4E,KAAK0S,SAAWN,EACTpS,MAFIA,KAAK0S,SAUpBC,wBAES3S,KAAK4S,eACN5S,KAAKqS,eACqB,IAA1BrS,KAAK6R,QAAQnB,UAEb1Q,KAAK6S,YAUbhQ,KAAK9C,GACD,IAAKC,KAAKyO,YAAYzT,QAAQ,QAC1B,OAAOgF,KACXA,KAAK+O,OAAS,IAAI+D,EAAO9S,KAAK5F,IAAK4F,KAAK2B,MACxC,MAAMgB,EAAS3C,KAAK+O,OACd5N,EAAOnB,KACbA,KAAKyO,YAAc,UACnBzO,KAAK+S,eAAgB,EAErB,MAAMC,EAAiBpT,EAAG+C,EAAQ,QAAQ,WACtCxB,EAAK4E,SACLhG,GAAMA,OAGJkT,EAAWrT,EAAG+C,EAAQ,SAAUkD,IAClC1E,EAAK6I,UACL7I,EAAKsN,YAAc,SACnBzO,KAAKgB,aAAa,QAAS6E,GACvB9F,EACAA,EAAG8F,GAIH1E,EAAKwR,0BAGb,IAAI,IAAU3S,KAAK0S,SAAU,CACzB,MAAMzD,EAAUjP,KAAK0S,SACL,IAAZzD,GACA+D,IAGJ,MAAM9D,EAAQlP,KAAK6B,cAAa,KAC5BmR,IACArQ,EAAOI,QAEPJ,EAAO/B,KAAK,QAAS,IAAIsB,MAAM,cAChC+M,GAECjP,KAAK2B,KAAKqE,WACVkJ,EAAMhJ,QAEVlG,KAAKsO,KAAKpO,MAAK,WACXuB,aAAayN,MAKrB,OAFAlP,KAAKsO,KAAKpO,KAAK8S,GACfhT,KAAKsO,KAAKpO,KAAK+S,GACRjT,KAQXsN,QAAQvN,GACJ,OAAOC,KAAK6C,KAAK9C,GAOrBgG,SAEI/F,KAAKgK,UAELhK,KAAKyO,YAAc,OACnBzO,KAAKgB,aAAa,QAElB,MAAM2B,EAAS3C,KAAK+O,OACpB/O,KAAKsO,KAAKpO,KAAKN,EAAG+C,EAAQ,OAAQ3C,KAAKkT,OAAOpR,KAAK9B,OAAQJ,EAAG+C,EAAQ,OAAQ3C,KAAKmT,OAAOrR,KAAK9B,OAAQJ,EAAG+C,EAAQ,QAAS3C,KAAKuG,QAAQzE,KAAK9B,OAAQJ,EAAG+C,EAAQ,QAAS3C,KAAKmG,QAAQrE,KAAK9B,OAAQJ,EAAGI,KAAKkS,QAAS,UAAWlS,KAAKoT,UAAUtR,KAAK9B,QAOvPkT,SACIlT,KAAKgB,aAAa,QAOtBmS,OAAO7X,GACH0E,KAAKkS,QAAQpG,IAAIxQ,GAOrB8X,UAAU7P,GACNvD,KAAKgB,aAAa,SAAUuC,GAOhCgD,QAAQV,GACJ7F,KAAKgB,aAAa,QAAS6E,GAQ/BlD,OAAO0J,EAAK1K,GACR,IAAIgB,EAAS3C,KAAKsR,KAAKjF,GAKvB,OAJK1J,IACDA,EAAS,IAAI6E,EAAOxH,KAAMqM,EAAK1K,GAC/B3B,KAAKsR,KAAKjF,GAAO1J,GAEdA,EAQX0Q,SAAS1Q,GACL,MAAM2O,EAAO1U,OAAOG,KAAKiD,KAAKsR,MAC9B,IAAK,MAAMjF,KAAOiF,EAAM,CAEpB,GADetR,KAAKsR,KAAKjF,GACdmC,OACP,OAGRxO,KAAKsT,SAQTnE,QAAQ5L,GACJ,MAAMgQ,EAAiBvT,KAAKgS,QAAQhO,OAAOT,GAC3C,IAAK,IAAI9H,EAAI,EAAGA,EAAI8X,EAAenY,OAAQK,IACvCuE,KAAK+O,OAAO3L,MAAMmQ,EAAe9X,GAAI8H,EAAO8H,SAQpDrB,UACIhK,KAAKsO,KAAKtR,SAAS8S,GAAeA,MAClC9P,KAAKsO,KAAKlT,OAAS,EACnB4E,KAAKkS,QAAQjF,UAOjBqG,SACItT,KAAK+S,eAAgB,EACrB/S,KAAK4S,eAAgB,EACrB5S,KAAKmG,QAAQ,gBACTnG,KAAK+O,QACL/O,KAAK+O,OAAOhM,QAOpByK,aACI,OAAOxN,KAAKsT,SAOhBnN,QAAQ/D,GACJpC,KAAKgK,UACLhK,KAAK6R,QAAQb,QACbhR,KAAKyO,YAAc,SACnBzO,KAAKgB,aAAa,QAASoB,GACvBpC,KAAKqS,gBAAkBrS,KAAK+S,eAC5B/S,KAAK6S,YAQbA,YACI,GAAI7S,KAAK4S,eAAiB5S,KAAK+S,cAC3B,OAAO/S,KACX,MAAMmB,EAAOnB,KACb,GAAIA,KAAK6R,QAAQnB,UAAY1Q,KAAKsS,sBAC9BtS,KAAK6R,QAAQb,QACbhR,KAAKgB,aAAa,oBAClBhB,KAAK4S,eAAgB,MAEpB,CACD,MAAMY,EAAQxT,KAAK6R,QAAQlB,WAC3B3Q,KAAK4S,eAAgB,EACrB,MAAM1D,EAAQlP,KAAK6B,cAAa,KACxBV,EAAK4R,gBAET/S,KAAKgB,aAAa,oBAAqBG,EAAK0Q,QAAQnB,UAEhDvP,EAAK4R,eAET5R,EAAK0B,MAAMgD,IACHA,GACA1E,EAAKyR,eAAgB,EACrBzR,EAAK0R,YACL7S,KAAKgB,aAAa,kBAAmB6E,IAGrC1E,EAAKsS,oBAGdD,GAECxT,KAAK2B,KAAKqE,WACVkJ,EAAMhJ,QAEVlG,KAAKsO,KAAKpO,MAAK,WACXuB,aAAayN,OASzBuE,cACI,MAAMC,EAAU1T,KAAK6R,QAAQnB,SAC7B1Q,KAAK4S,eAAgB,EACrB5S,KAAK6R,QAAQb,QACbhR,KAAKgB,aAAa,YAAa0S,ICxVvC,MAAMC,EAAQ,GACd,SAASnV,EAAOpE,EAAKuH,GACE,iBAARvH,IACPuH,EAAOvH,EACPA,OAAMkR,GAGV,MAAMsI,EAASzZ,EAAIC,GADnBuH,EAAOA,GAAQ,IACctH,MAAQ,cAC/BqB,EAASkY,EAAOlY,OAChBe,EAAKmX,EAAOnX,GACZpC,EAAOuZ,EAAOvZ,KACdwZ,EAAgBF,EAAMlX,IAAOpC,KAAQsZ,EAAMlX,GAAU,KAK3D,IAAIkR,EAeJ,OAnBsBhM,EAAKmS,UACvBnS,EAAK,0BACL,IAAUA,EAAKoS,WACfF,EAGAlG,EAAK,IAAIyD,EAAQ1V,EAAQiG,IAGpBgS,EAAMlX,KACPkX,EAAMlX,GAAM,IAAI2U,EAAQ1V,EAAQiG,IAEpCgM,EAAKgG,EAAMlX,IAGXmX,EAAOvY,QAAUsG,EAAKtG,QAEtBsG,EAAKtG,MAAQuY,EAAOzX,UAEjBwR,EAAGhL,OAAOiR,EAAOvZ,KAAMsH,GAIlC/E,OAAO+K,OAAOnJ,EAAQ,CAClB4S,QAAAA,EACA5J,OAAAA,EACAmG,GAAInP,EACJ8O,QAAS9O"}